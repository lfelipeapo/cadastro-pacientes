version: "3.3"
services:
  #aplicação web (PHP+NGINX)
  web:
    container_name: web
    image: lfelipeapo/php-nginx-web:1.0.0
    build: 
      args:
        user: admin
        uid: 1000
      context: .
      dockerfile: ./Dockerfile
    networks:
      - rede
    working_dir: /var/www
    volumes:
      - ./applications:/var/www
      - ./docker/nginx/sites:/etc/nginx/sites-available
    ports:
      - "80:8000" #http
      - "443:443" #https
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"
      - "8084:8084"
      - "8085:8085"
      - "8086:8086"
      - "8087:8087"
      - "8088:8088"
      - "8089:8089"
    depends_on:
      - postgres
      - redis
      - mysql

  # aplicação Postgres
  postgres:
    container_name: postgres
    image: postgres:14.3-alpine
    restart: always
    networks:
      - rede
    volumes:
      - POSTGRES_VOLUME:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: senha_exemplar_postgres
      POSTGRES_DB: db_postgres_exemplo
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 20000:5432

  # aplicação MySQL
  mysql:
    container_name: mysql
    image: mysql:8.0.29-debian
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - MYSQL_VOLUME:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: senha_exemplar_mysql
      MYSQL_DATABASE: db_mysql_exemplo
    networks:
      - rede
    ports:
      - 30000:3306

  # aplicação Redis
  redis:
    container_name: redis
    image: redis:7-alpine
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./data/redis:/data
    networks:
      - rede
    ports:
      - 6379:6379

  queue:
    container_name: queue
    image: redis:7-alpine
    volumes:
      - ./data/redis:/data
    networks:
      - rede

networks:
  rede:
    driver: bridge

volumes:
  POSTGRES_VOLUME:
  MYSQL_VOLUME:
  QUEUE_VOLUME: